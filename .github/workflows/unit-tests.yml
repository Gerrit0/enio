# Unit Tests & Code Coverage Review
#
# This Action will scan changes made as part of a Pull Request to determine which projects should run unit tests. Once unit tests run, code coverage is reported, and step will fail if it does not meet code coverage thresholds.
#
name: 'Unit Tests & Code Coverage Review'
on: [pull_request]

jobs:
  unit-tests-review:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Use Node v16
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Install dependencies
      uses: bahmutov/npm-install@v1
      with:
        install-command: npm i
      ##############################
    - name: Print github workspace 1
      run: |
        echo "GITHUB_WORKSPACE = $GITHUB_WORKSPACE"
        echo "github.workspace = ${{ github.workspace }}"
        echo "pr.ref = ${{github.event.pull_request.head.ref}}"
        echo "github.ref = ${{ github.ref }}"
        echo "$GITHUB_CONTEXT"
        echo "pwd = $(pwd)"
        echo "files:"
        echo "$(ls)"
      ##############################
    - name: Run Unit Tests and Coverage Reports
      uses: MansaGroup/nrwl-nx-action@v3.2.1
      with:
        affected: true
        nxCloud: true
        targets: test

    ###########################
    - name: Print github workspace 2
      run: |
        echo "GITHUB_WORKSPACE = $GITHUB_WORKSPACE"
        echo "github.workspace = ${{ github.workspace }}"
        echo "pr.ref = ${{github.event.pull_request.head.ref}}"
        echo "github.ref = ${{ github.ref }}"
        echo "$GITHUB_CONTEXT"
        echo "pwd = $(pwd)"
        echo "files:"
        echo "$(ls)"
    ###########################

    # Testing if can see any changes after running tests

    # - name: Make uncommitted changes by creating empty file
    #   run: touch uncommitted.tmp
    # - name: Flag github/workspace as safe
    #   run: git config --global --add safe.directory /github/workspace
    # - name: Check for uncommitted changes
    #   id: check-changes
    #   uses: mskri/check-uncommitted-changes-action@v1.0.1
    # - name: Print uncommitted changes
    #   if: steps.check-changes.outputs.changes != ''
    #   run: echo "There are uncommitted changes"

    ##############################
    - name: Check in code coverage
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add coverage
        git commit -m "docs: add code coverage report"
    ##############################

    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v13
      id: verify-changed-files
      with:
        files: coverage

    - name: Run step only when any of the above files change.
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      run: |
        echo "Changed files: ${{ steps.verify-changed-files.outputs.changed_files }}"

    - name: Code Coverage Report
      uses: dkhunt27/nx-code-coverage@v0.3.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        gist-token: ${{ secrets.COVERAGE_BADGES_GIST_TOKEN }}
        gist-id: 0b98501627ca03cf8058155b5c337a3d
        color: green
